root
 └─[0] dec_list
   ├─[1] function
   │ ├─[1] int_type
   │ ├─[1] id (funA)
   │ ├─[1] params
   │ ├─[1] dec_list
   │ └─[2] list
   │   └─[2] return_stmt
   │     └─[2] int_const (3)
   ├─[3] function
   │ ├─[3] int_type
   │ ├─[3] id (funB)
   │ ├─[3] params
   │ ├─[3] dec_list
   │ └─[4] list
   │   └─[4] return_stmt
   │     └─[4] int_const (4)
   └─[5] function
     ├─[5] int_type
     ├─[5] id (main)
     ├─[5] params
     ├─[5] dec_list
     └─[6] list
       └─[6] return_stmt
         └─[6] sum
           ├─[6] call
           │ └─[6] id (funA)
           └─[6] call
             └─[6] id (funB)
.text
.globl main
.type main, @function
# FUNCTION funA
funA:
	push %rbp
	mov %rsp, %rbp
.funA.0:
# (3) <[int][RETURN], 3>
	mov $3, %rax
	add $0, %rsp
	mov %rsp, %rbp
	pop %rbp
	ret 
# FUNCTION funB
funB:
	push %rbp
	mov %rsp, %rbp
.funB.0:
# (8) <[int][RETURN], 4>
	mov $4, %rax
	add $0, %rsp
	mov %rsp, %rbp
	pop %rbp
	ret 
# FUNCTION main
main:
	push %rbp
	mov %rsp, %rbp
.main.0:
# (13) <[int][CALL], (int)#0, (int)funA>
	call funA
	push %rax
# (13) <[int][CALL], (int)#1, (int)funB>
	call funB
	push %rax
# (13) <[int][ADD], (int)#2, (int)#0, (int)#1>
	mov -8(%rbp), %rbx
	mov -16(%rbp), %rcx
	add %rbx, %rcx
	mov %rcx, %rax
	push %rax
# (13) <[int][RETURN], (int)#2>
	mov -24(%rbp), %rax
	add $24, %rsp
	mov %rsp, %rbp
	pop %rbp
	ret 
