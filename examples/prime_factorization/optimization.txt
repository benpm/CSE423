 BB4294967295 [globals]
  └────────────────────

brute_force_fact((int)i, )
  BB0 [assignment]
  │(3) <[int][ASSIGN], (int)n, 2>
  └────────────────────
  BB1 [lt]
  │(3) <[JUMP_LT], <2>, (int)n, (int)i>
  │(3) <[JUMP], <6>>
  └────────────────────
  BB2 [equal]
  │(4) <[int][MOD], (int)#0, (int)i, (int)n>
  │(4) <[JUMP_EQ], <3>, (int)#0, 0>
  │(4) <[JUMP], <5>>
  └────────────────────
  BB3 [combined]
  │(5) <[int][CALL], (int)#0, printf, "%d is not prime! %d divides it!\n", (int)i, (int)n>
  │(6) <[int][RETURN], 0>
  └────────────────────
  BB5 [for_post]
  │(3) <[int][ADD], (int)n, (int)n, 1>
  │(3) <[JUMP], <1>>
  └────────────────────
  BB6 [combined]
  │(10) <[int][CALL], (int)#0, printf, "%d is prime!\n", (int)i>
  │(11) <[int][RETURN], 0>
  └────────────────────

optimization_congruence_class((int)i, )
  BB0 [combined]
  │(16) <[int][ASSIGN], (int)j, 5>
  │(18) <[JUMP_EQ], <4>, (int)i, 2>
  └────────────────────
  BB2 [equal]
  │(18) <[JUMP_EQ], <4>, (int)i, 3>
  └────────────────────
  BB3 [fallthrough]
  │(18) <[JUMP], <6>>
  └────────────────────
  BB4 [combined]
  │(19) <[int][CALL], (int)#0, printf, "%d is prime!\n", (int)i>
  │(20) <[int][RETURN], 0>
  └────────────────────
  BB6 [equal]
  │(23) <[int][MOD], (int)#0, (int)i, 2>
  │(23) <[JUMP_EQ], <7>, (int)#0, 0>
  │(23) <[JUMP], <9>>
  └────────────────────
  BB7 [combined]
  │(24) <[int][CALL], (int)#0, printf, "%d is not prime! 2 divides it\n", (int)i>
  │(25) <[int][RETURN], 0>
  └────────────────────
  BB9 [equal]
  │(26) <[int][MOD], (int)#0, (int)i, 3>
  │(26) <[JUMP_EQ], <10>, (int)#0, 0>
  │(26) <[JUMP], <12>>
  └────────────────────
  BB10 [combined]
  │(27) <[int][CALL], (int)#0, printf, "%d is not prime! 3 divides it\n", (int)i>
  │(28) <[int][RETURN], 0>
  │(28) <[JUMP], <20>>
  └────────────────────
  BB12 [lt]
  │(30) <[JUMP_LT], <13>, 25, (int)i>
  │(30) <[JUMP], <20>>
  └────────────────────
  BB13 [equal]
  │(31) <[int][MOD], (int)#0, (int)i, 5>
  │(31) <[JUMP_EQ], <16>, (int)#0, 0>
  └────────────────────
  BB14 [equal]
  │(31) <[int][MOD], (int)#1, (int)i, 7>
  │(31) <[JUMP_EQ], <16>, (int)#1, 0>
  └────────────────────
  BB15 [fallthrough]
  │(31) <[JUMP], <18>>
  └────────────────────
  BB16 [combined]
  │(32) <[int][CALL], (int)#0, printf, "%d is not prime! %d divides it!\n", (int)i, 5>
  │(33) <[int][RETURN], 0>
  └────────────────────
  BB18 [combined]
  │(35) <[int][ADD], (int)j, (int)j, 6>
  │(30) <[JUMP], <12>>
  └────────────────────
  BB20 [combined]
  │(39) <[int][CALL], (int)#0, printf, "%d is prime!\n", (int)i>
  │(40) <[int][RETURN], 0>
  └────────────────────

main()
  BB0 [assignment]
  │(45) <[int][ASSIGN], (int)i, 1>
  └────────────────────
  BB1 [lt]
  │(45) <[JUMP_LT], <2>, (int)i, 100>
  │(45) <[JUMP], <5>>
  └────────────────────
  BB2 [combined]
  │(46) <[int][CALL], (int)#0, brute_force_fact, (int)i>
  │(47) <[int][CALL], (int)#0, optimization_congruence_class, (int)i>
  │(45) <[int][ADD], (int)i, (int)i, 1>
  │(45) <[JUMP], <1>>
  └────────────────────
  BB5 [return_stmt]
  │(50) <[int][RETURN], 0>
  └────────────────────


