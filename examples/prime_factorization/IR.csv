BB,4294967295,globals
func,brute_force_fact,int i
BB,0,assignment
stmt,3,int,ASSIGN,int n,2
BB,1,lt
stmt,3,none,JUMP_LT,2,int n,int i
stmt,3,none,JUMP,6
BB,2,equal
stmt,4,int,MOD,int #0,int i,int n
stmt,4,none,JUMP_EQ,3,int #0,0
stmt,4,none,JUMP,5
BB,3,combined
stmt,5,int,CALL,int #0,printf,"%d is not prime! %d divides it!\n",int i,int n
stmt,6,int,RETURN,0
BB,5,for_post
stmt,3,int,ADD,int n,int n,1
stmt,3,none,JUMP,1
BB,6,combined
stmt,10,int,CALL,int #0,printf,"%d is prime!\n",int i
stmt,11,int,RETURN,0
func,optimization_congruence_class,int i
BB,0,combined
stmt,16,int,ASSIGN,int j,5
stmt,18,none,JUMP_EQ,4,int i,2
BB,2,equal
stmt,18,none,JUMP_EQ,4,int i,3
BB,3,fallthrough
stmt,18,none,JUMP,6
BB,4,combined
stmt,19,int,CALL,int #0,printf,"%d is prime!\n",int i
stmt,20,int,RETURN,0
BB,6,equal
stmt,23,int,MOD,int #0,int i,2
stmt,23,none,JUMP_EQ,9,int #0,0
BB,7,equal
stmt,23,int,MOD,int #0,int i,3
stmt,23,none,JUMP_EQ,9,int #0,0
BB,8,fallthrough
stmt,23,none,JUMP,11
BB,9,combined
stmt,24,int,CALL,int #0,printf,"%d is not prime! 2 or 3 divides it\n",int i
stmt,25,int,RETURN,0
BB,11,lt
stmt,28,int,MUL,int #0,int j,int j
stmt,28,none,JUMP_LT,12,int #0,int i
stmt,28,none,JUMP,19
BB,12,equal
stmt,29,int,MOD,int #0,int i,int j
stmt,29,none,JUMP_EQ,15,int #0,0
BB,13,equal
stmt,29,int,ADD,int #0,int j,2
stmt,29,int,MOD,int #1,int i,int #0
stmt,29,none,JUMP_EQ,15,int #1,0
BB,14,fallthrough
stmt,29,none,JUMP,17
BB,15,combined
stmt,30,int,CALL,int #0,printf,"%d is not prime! %d divides it!\n",int i,int j
stmt,31,int,RETURN,0
BB,17,combined
stmt,33,int,ADD,int j,int j,6
stmt,28,none,JUMP,11
BB,19,combined
stmt,36,int,CALL,int #0,printf,"%d is prime!\n",int i
stmt,37,int,RETURN,0
func,main
BB,0,assignment
stmt,42,int,ASSIGN,int i,1
BB,1,lt
stmt,42,none,JUMP_LT,2,int i,100
stmt,42,none,JUMP,5
BB,2,combined
stmt,43,int,CALL,int #0,brute_force_fact,int i
stmt,44,int,CALL,int #0,optimization_congruence_class,int i
stmt,42,int,ADD,int i,int i,1
stmt,42,none,JUMP,1
BB,5,return_stmt
stmt,47,int,RETURN,0

