<int, INT>
<globalA, ID>
<=, EQUAL>
<78123, INTCONST>
<*, TIMES>
<88, INTCONST>
<-, MINUS>
<(, LPAREN>
<-, MINUS>
<0, INTCONST>
<+, PLUS>
<371, INTCONST>
<%, MODULO>
<138, INTCONST>
<), RPAREN>
<;, SEMICOLON>
<int, INT>
<globalB, ID>
<=, EQUAL>
<222222, INTCONST>
<;, SEMICOLON>
<int, INT>
<funA, ID>
<(, LPAREN>
<int, INT>
<x, ID>
<,, COMMA>
<int, INT>
<y, ID>
<,, COMMA>
<int, INT>
<z, ID>
<), RPAREN>
<{, LBRACE>
<int, INT>
<i, ID>
<=, EQUAL>
<x, ID>
<+, PLUS>
<x, ID>
<;, SEMICOLON>
<int, INT>
<j, ID>
<=, EQUAL>
<y, ID>
<*, TIMES>
<(, LPAREN>
<x, ID>
<+, PLUS>
<-, MINUS>
<z, ID>
<), RPAREN>
<;, SEMICOLON>
<int, INT>
<k, ID>
<=, EQUAL>
<i, ID>
<*, TIMES>
<j, ID>
<*, TIMES>
<j, ID>
<;, SEMICOLON>
<if, IF>
<(, LPAREN>
<z, ID>
<==, ISEQ>
<0, INTCONST>
<), RPAREN>
<{, LBRACE>
<z, ID>
<=, EQUAL>
<1, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<j, ID>
<=, EQUAL>
<y, ID>
<*, TIMES>
<(, LPAREN>
<x, ID>
<%, MODULO>
<-, MINUS>
<z, ID>
<), RPAREN>
<;, SEMICOLON>
<for, IF>
<(, LPAREN>
<int, INT>
<zzzz, ID>
<=, EQUAL>
<0, INTCONST>
<;, SEMICOLON>
<zzzz, ID>
<!=, NOTEQ>
<globalB, ID>
<;, SEMICOLON>
<zzzz, ID>
<+=, PLUSEQUAL>
<2, INTCONST>
<), RPAREN>
<{, LBRACE>
<if, IF>
<(, LPAREN>
<(, LPAREN>
<i, ID>
<<, LT>
<j, ID>
<), RPAREN>
<&&, LOGAND>
<(, LPAREN>
<j, ID>
<==, ISEQ>
<k, ID>
<||, LOGOR>
<i, ID>
<>=, GE>
<k, ID>
<), RPAREN>
<), RPAREN>
<{, LBRACE>
<i, ID>
<+=, PLUSEQUAL>
<10, INTCONST>
<;, SEMICOLON>
<globalA, ID>
<-=, MINUSEQUAL>
<7, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<{, LBRACE>
<i, ID>
<+=, PLUSEQUAL>
<2, INTCONST>
<;, SEMICOLON>
<globalA, ID>
<+=, PLUSEQUAL>
<10, INTCONST>
<*, TIMES>
<globalB, ID>
<;, SEMICOLON>
<}, RBRACE>
<if, IF>
<(, LPAREN>
<i, ID>
<>, GT>
<100, INTCONST>
<), RPAREN>
<{, LBRACE>
<if, IF>
<(, LPAREN>
<k, ID>
<+, PLUS>
<x, ID>
<-, MINUS>
<z, ID>
<+, PLUS>
<globalB, ID>
<!=, NOTEQ>
<0, INTCONST>
<), RPAREN>
<{, LBRACE>
<return, RETURN>
<i, ID>
<*, TIMES>
<j, ID>
</, DIVIDE>
<(, LPAREN>
<k, ID>
<+, PLUS>
<x, ID>
<-, MINUS>
<z, ID>
<+, PLUS>
<globalB, ID>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<{, LBRACE>
<return, RETURN>
<i, ID>
<*, TIMES>
<j, ID>
<+, PLUS>
<(, LPAREN>
<k, ID>
<+, PLUS>
<x, ID>
<-, MINUS>
<z, ID>
<+, PLUS>
<globalA, ID>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<if, IF>
<(, LPAREN>
<i, ID>
<<, LT>
<-, MINUS>
<100, INTCONST>
<), RPAREN>
<{, LBRACE>
<globalB, ID>
<-=, MINUSEQUAL>
<2, INTCONST>
<;, SEMICOLON>
<break, BREAK>
<;, SEMICOLON>
<}, RBRACE>
<if, IF>
<(, LPAREN>
<i, ID>
<==, ISEQ>
<0, INTCONST>
<), RPAREN>
<{, LBRACE>
<globalA, ID>
<*=, TIMESEQUAL>
<globalB, ID>
<+, PLUS>
<i, ID>
<;, SEMICOLON>
<goto, GOTO>
<AAAAHHHH, ID>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<return, RETURN>
<z, ID>
<*, TIMES>
<(, LPAREN>
<-, MINUS>
<i, ID>
<*, TIMES>
<j, ID>
<), RPAREN>
<;, SEMICOLON>
<AAAAHHHH, ID>
<:, COLON>
<return, RETURN>
<globalA, ID>
<+, PLUS>
<globalB, ID>
<;, SEMICOLON>
<}, RBRACE>
<int, INT>
<funB, ID>
<(, LPAREN>
<int, INT>
<f, ID>
<), RPAREN>
<{, LBRACE>
<f, ID>
<-=, MINUSEQUAL>
<1, INTCONST>
<;, SEMICOLON>
<if, IF>
<(, LPAREN>
<f, ID>
<>=, GE>
<10, INTCONST>
<&&, LOGAND>
<f, ID>
<<, LT>
<23, INTCONST>
<), RPAREN>
<{, LBRACE>
<return, RETURN>
<funB, ID>
<(, LPAREN>
<f, ID>
</, DIVIDE>
<2, INTCONST>
<), RPAREN>
<+, PLUS>
<funA, ID>
<(, LPAREN>
<-, MINUS>
<123, INTCONST>
<,, COMMA>
<23, INTCONST>
<,, COMMA>
<f, ID>
<*, TIMES>
<2, INTCONST>
<*, TIMES>
<f, ID>
<-, MINUS>
<f, ID>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<if, IF>
<(, LPAREN>
<f, ID>
<<, LT>
<10, INTCONST>
<&&, LOGAND>
<f, ID>
<>, GT>
<-, MINUS>
<10, INTCONST>
<), RPAREN>
<{, LBRACE>
<return, RETURN>
<globalA, ID>
<+, PLUS>
<69, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<if, IF>
<(, LPAREN>
<f, ID>
<<, LT>
<10, INTCONST>
<&&, LOGAND>
<f, ID>
<>, GT>
<-, MINUS>
<100, INTCONST>
<), RPAREN>
<{, LBRACE>
<int, INT>
<z, ID>
<=, EQUAL>
<100, INTCONST>
<;, SEMICOLON>
<f, ID>
<+=, PLUSEQUAL>
<f, ID>
<*, TIMES>
<f, ID>
<;, SEMICOLON>
<while, WHILE>
<(, LPAREN>
<z, ID>
<!=, NOTEQ>
<(, LPAREN>
<z, ID>
<*, TIMES>
<0, INTCONST>
<), RPAREN>
<), RPAREN>
<{, LBRACE>
<z, ID>
<-=, MINUSEQUAL>
<funA, ID>
<(, LPAREN>
<10, INTCONST>
<,, COMMA>
<20, INTCONST>
<,, COMMA>
<f, ID>
<), RPAREN>
<;, SEMICOLON>
<if, IF>
<(, LPAREN>
<z, ID>
<<, LT>
<10, INTCONST>
<), RPAREN>
<{, LBRACE>
<for, IF>
<(, LPAREN>
<int, INT>
<g, ID>
<=, EQUAL>
<f, ID>
<;, SEMICOLON>
<g, ID>
<<, LT>
<f, ID>
<*, TIMES>
<2, INTCONST>
<;, SEMICOLON>
<g, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<z, ID>
<+=, PLUSEQUAL>
<420, INTCONST>
<%, MODULO>
<z, ID>
<+, PLUS>
<funA, ID>
<(, LPAREN>
<2, INTCONST>
<,, COMMA>
<2, INTCONST>
<,, COMMA>
<2, INTCONST>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<return, RETURN>
<0, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<{, LBRACE>
<return, RETURN>
<globalA, ID>
<*, TIMES>
<1, INTCONST>
<*, TIMES>
<123, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<}, RBRACE>
<else, ELSE>
<{, LBRACE>
<if, IF>
<(, LPAREN>
<f, ID>
<!=, NOTEQ>
<0, INTCONST>
<), RPAREN>
<{, LBRACE>
<return, RETURN>
<f, ID>
<*, TIMES>
<f, ID>
<+, PLUS>
<(, LPAREN>
<0, INTCONST>
<-, MINUS>
<(, LPAREN>
<-, MINUS>
<globalB, ID>
<), RPAREN>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<return, RETURN>
<funB, ID>
<(, LPAREN>
<f, ID>
<-, MINUS>
<1, INTCONST>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
<int, INT>
<main, ID>
<(, LPAREN>
<), RPAREN>
<{, LBRACE>
<int, INT>
<accum, ID>
<=, EQUAL>
<0, INTCONST>
<;, SEMICOLON>
<for, IF>
<(, LPAREN>
<int, INT>
<i, ID>
<=, EQUAL>
<-, MINUS>
<100, INTCONST>
<;, SEMICOLON>
<i, ID>
<<, LT>
<100, INTCONST>
<;, SEMICOLON>
<i, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<for, IF>
<(, LPAREN>
<int, INT>
<j, ID>
<=, EQUAL>
<-, MINUS>
<100, INTCONST>
<;, SEMICOLON>
<j, ID>
<<, LT>
<100, INTCONST>
<;, SEMICOLON>
<j, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<for, IF>
<(, LPAREN>
<int, INT>
<k, ID>
<=, EQUAL>
<-, MINUS>
<100, INTCONST>
<;, SEMICOLON>
<k, ID>
<<, LT>
<100, INTCONST>
<;, SEMICOLON>
<k, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<int, INT>
<val, ID>
<=, EQUAL>
<funA, ID>
<(, LPAREN>
<i, ID>
<,, COMMA>
<j, ID>
<,, COMMA>
<k, ID>
<), RPAREN>
<;, SEMICOLON>
<accum, ID>
<+=, PLUSEQUAL>
<val, ID>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<}, RBRACE>
<for, IF>
<(, LPAREN>
<int, INT>
<i, ID>
<=, EQUAL>
<-, MINUS>
<100, INTCONST>
<;, SEMICOLON>
<i, ID>
<<, LT>
<100, INTCONST>
<;, SEMICOLON>
<i, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<int, INT>
<val, ID>
<=, EQUAL>
<funB, ID>
<(, LPAREN>
<i, ID>
<), RPAREN>
<;, SEMICOLON>
<accum, ID>
<+=, PLUSEQUAL>
<val, ID>
<;, SEMICOLON>
<}, RBRACE>
<return, RETURN>
<accum, ID>
<;, SEMICOLON>
<}, RBRACE>
