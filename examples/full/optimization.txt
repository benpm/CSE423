fun((float)V, (float)XKAD, )
  BB0 [combined]
  │(3) <[float][ADD], (float)#0, (float)XKAD, (float)V>
  │(3) <[float][ASSIGN], (float)n1, (float)#0>
  │(4) <[float][MUL], (float)#1, (float)n1, 80>
  │(4) <[float][RETURN], (float)#1>
  └────────────────────

main()
  BB0 [combined]
  │(10) <[int][ASSIGN], (int)n1, -9>
  │(11) <[int][ASSIGN], (int)n2, 81>
  │(13) <[float][ASSIGN], (float)DF, 64.800003>
  │(14) <[char][ASSIGN], (char)G, 'G'>
  │(17) <[int][ASSIGN], (int)i, 0>
  └────────────────────
  BB6 [for_cond]
  │(17) <[int][MUL], (int)#B, (int)n2, (int)n1>
  │(17) <[int][DIV], (int)#C, (int)#B, 2>
  │(17) <[int][COMP_LT], (int)#D, (int)i, (int)#C>
  │(17) <[JUMP_IF_FALSE], <21>, (int)#D>
  └────────────────────
  BB7 [combined]
  │(19) <[JUMP], <21>>
  └────────────────────
  BB9 [assignment]
  │(20) <[int][ASSIGN], (int)j, 0>
  └────────────────────
  BB10 [for_cond]
  │(20) <[int][DIV], (int)#E, (int)n1, 2>
  │(20) <[int][ADD], (int)#F, (int)n2, (int)#E>
  │(20) <[int][COMP_LT], (int)#10, (int)j, (int)#F>
  │(20) <[JUMP_IF_FALSE], <20>, (int)#10>
  └────────────────────
  BB11 [assignment]
  │(21) <[int][ASSIGN], (int)x, 0>
  └────────────────────
  BB12 [while_cond]
  │(22) <[int][COMP_LT], (int)#11, (int)x, (int)n2>
  │(22) <[int][COMP_GE], (int)#12, (int)x, (int)n2>
  │(22) <[int][NOT], (int)#13, (int)#12>
  │(22) <[int][LOG_OR], (int)#14, (int)#11, (int)#13>
  │(22) <[JUMP_IF_FALSE], <19>, (int)#14>
  └────────────────────
  BB13 [combined]
  │(24) <[int][ASSIGN], (int)x2, 3>
  │(25) <[int][ADD], (int)#15, 10, (int)x>
  │(25) <[int][ADD], (int)x2, (int)x2, (int)#15>
  │(26) <[int][MINUS], (int)n2, (int)n2, (int)x>
  │(27) <[JUMP], <19>>
  └────────────────────
  BB18 [while_post]
  │(22) <[JUMP], <12>>
  └────────────────────
  BB19 [for_post]
  │(20) <[int][ADD], (int)j, (int)j, 1>
  │(20) <[JUMP], <10>>
  └────────────────────
  BB20 [for_post]
  │(17) <[int][ADD], (int)i, (int)i, 1>
  │(17) <[JUMP], <6>>
  └────────────────────
  BB21 [combined]
  │(33) <[float][CALL], (float)#17, fun, (float)DF, 0.202000>
  │(33) <[float][CALL], (float)#18, fun, (float)#17, 0.900000>
  │(33) <[float][ASSIGN], (float)DF, (float)#18>
  │(34) <[float][CALL], (float)#19, printf, "test: %f\n", (float)DF>
  │(37) <[float][MINUS], (float)#1A, (float)DF>
  │(37) <[float][SUB], (float)#1B, 0.800000, (float)#1A>
  │(37) <[float][COMP_LT], (float)#1C, (float)DF, (float)#1B>
  │(37) <[JUMP_IF_FALSE], <37>, (float)#1C>
  └────────────────────
  BB24 [if_stmt]
  │(38) <[int][COMP_NEQ], (int)#1D, (int)n2, 10>
  │(38) <[JUMP_IF_FALSE], <29>, (int)#1D>
  └────────────────────
  BB25 [combined]
  │(39) <[char][ASSIGN], (char)G, 'H'>
  │(40) <[int][MUL], (int)n1, (int)n1, 1>
  │(41) <[int][MOD], (int)n1, (int)n1, 10>
  │(42) <[int][ADD], (int)n1, (int)n1, 1>
  └────────────────────
  BB29 [else_if]
  │(43) <[int][COMP_LE], (int)#1E, (int)n1, 2>
  │(43) <[char][COMP_EQ], (char)#1F, (char)G, 'H'>
  │(43) <[int][COMP_NEQ], (int)#20, (int)n2, 100>
  │(43) <[int][LOG_OR], (int)#21, (char)#1F, (int)#20>
  │(43) <[int][LOG_AND], (int)#22, (int)#1E, (int)#21>
  │(43) <[JUMP_IF_FALSE], <33>, (int)#22>
  └────────────────────
  BB30 [combined]
  │(44) <[float][ADD], (float)DF, (float)DF, -0.600000>
  │(45) <[float][COMP_EQ], (float)#24, (float)DF, 0.000000>
  │(45) <[JUMP_IF_FALSE], <33>, (float)#24>
  └────────────────────
  BB32 [assignment]
  └────────────────────
  BB33 [else_if]
  │(48) <[char][COMP_GE], (char)#25, (char)G, 'H'>
  │(48) <[JUMP_IF_FALSE], <36>, (char)#25>
  └────────────────────
  BB34 [combined]
  │(49) <[int][MINUS], (int)n2, (int)n2, 16>
  │(50) <[int][MINUS], (int)n2, (int)n2, 1>
  └────────────────────
  BB36 [div_equal]
  │(52) <[int][DIV], (int)n1, (int)n1, 2>
  └────────────────────
  BB37 [goto_stmt]
  │(55) <[JUMP], <39>>
  └────────────────────
  BB38 [return_stmt]
  │(56) <[int][ASSIGN], (int)#26, -1>
  │(56) <[int][RETURN], (int)#26>
  └────────────────────
  BB39 [combined]
  │(57) <[NO_OP]>
  │(58) <[int][MUL], (int)#27, (int)n1, 2>
  │(58) <[int][RETURN], (int)#27>
  └────────────────────


