<float, FLOAT>
<fun, ID>
<(, LPAREN>
<float, FLOAT>
<XKAD, ID>
<,, COMMA>
<float, FLOAT>
<V, ID>
<), RPAREN>
<{, LBRACE>
<float, FLOAT>
<n1, ID>
<=, EQUAL>
<XKAD, ID>
<+, PLUS>
<V, ID>
<;, SEMICOLON>
<return, RETURN>
<n1, ID>
<*, TIMES>
<80, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<int, INT>
<main, ID>
<(, LPAREN>
<), RPAREN>
<{, LBRACE>
<int, INT>
<n1, ID>
<=, EQUAL>
<15, INTCONST>
<*, TIMES>
<(, LPAREN>
<18, INTCONST>
</, DIVIDE>
<-, MINUS>
<2, INTCONST>
<), RPAREN>
<%, MODULO>
<18, INTCONST>
<;, SEMICOLON>
<int, INT>
<n2, ID>
<=, EQUAL>
<n1, ID>
<*, TIMES>
<n1, ID>
<;, SEMICOLON>
<int, INT>
<n3, ID>
<=, EQUAL>
<n1, ID>
<+, PLUS>
<n1, ID>
<+, PLUS>
<n2, ID>
<+, PLUS>
<n2, ID>
<;, SEMICOLON>
<float, FLOAT>
<DF, ID>
<=, EQUAL>
<0.8, FLOATCONST>
<*, TIMES>
<3.16, FLOATCONST>
<;, SEMICOLON>
<char, CHAR>
<G, ID>
<=, EQUAL>
<'G', CHARLIT>
<;, SEMICOLON>
<for, IF>
<(, LPAREN>
<int, INT>
<i, ID>
<=, EQUAL>
<0, INTCONST>
<;, SEMICOLON>
<i, ID>
<<, LT>
<n2, ID>
<*, TIMES>
<n1, ID>
</, DIVIDE>
<2, INTCONST>
<;, SEMICOLON>
<i, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<for, IF>
<(, LPAREN>
<int, INT>
<j, ID>
<=, EQUAL>
<0, INTCONST>
<;, SEMICOLON>
<j, ID>
<<, LT>
<n2, ID>
<+, PLUS>
<n1, ID>
</, DIVIDE>
<2, INTCONST>
<;, SEMICOLON>
<j, ID>
<+=, PLUSEQUAL>
<1, INTCONST>
<), RPAREN>
<{, LBRACE>
<int, INT>
<x, ID>
<=, EQUAL>
<0, INTCONST>
<;, SEMICOLON>
<while, WHILE>
<(, LPAREN>
<(, LPAREN>
<x, ID>
<<, LT>
<n2, ID>
<), RPAREN>
<||, LOGOR>
<!, NOT>
<(, LPAREN>
<x, ID>
<>=, GE>
<n2, ID>
<), RPAREN>
<), RPAREN>
<{, LBRACE>
<x, ID>
<+=, PLUSEQUAL>
<x, ID>
<;, SEMICOLON>
<break, BREAK>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<break, BREAK>
<;, SEMICOLON>
<}, RBRACE>
<DF, ID>
<=, EQUAL>
<fun, ID>
<(, LPAREN>
<fun, ID>
<(, LPAREN>
<DF, ID>
<,, COMMA>
<0.101, FLOATCONST>
<*, TIMES>
<2, INTCONST>
<), RPAREN>
<,, COMMA>
<0.9, FLOATCONST>
<), RPAREN>
<;, SEMICOLON>
<if, IF>
<(, LPAREN>
<DF, ID>
<<, LT>
<(, LPAREN>
<0.8, FLOATCONST>
<-, MINUS>
<(, LPAREN>
<-, MINUS>
<DF, ID>
<), RPAREN>
<), RPAREN>
<), RPAREN>
<{, LBRACE>
<if, IF>
<(, LPAREN>
<n2, ID>
<!=, NOTEQ>
<10, INTCONST>
<), RPAREN>
<{, LBRACE>
<G, ID>
<=, EQUAL>
<'H', CHARLIT>
<;, SEMICOLON>
<n1, ID>
<*=, TIMESEQUAL>
<1, INTCONST>
<;, SEMICOLON>
<n1, ID>
<%=, MODEQUAL>
<10, INTCONST>
<;, SEMICOLON>
<n1, ID>
<++, INCR>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<if, IF>
<(, LPAREN>
<n1, ID>
<<=, LE>
<2, INTCONST>
<&&, LOGAND>
<(, LPAREN>
<G, ID>
<==, ISEQ>
<'H', CHARLIT>
<||, LOGOR>
<n2, ID>
<!=, NOTEQ>
<100, INTCONST>
<), RPAREN>
<), RPAREN>
<{, LBRACE>
<DF, ID>
<+=, PLUSEQUAL>
<-, MINUS>
<.6, FLOATCONST>
<;, SEMICOLON>
<if, IF>
<(, LPAREN>
<DF, ID>
<==, ISEQ>
<0.00000, FLOATCONST>
<), RPAREN>
<{, LBRACE>
<DF, ID>
<=, EQUAL>
<1.01, FLOATCONST>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<else, ELSE>
<if, IF>
<(, LPAREN>
<G, ID>
<>=, GE>
<'H', CHARLIT>
<), RPAREN>
<{, LBRACE>
<n2, ID>
<-=, MINUSEQUAL>
<16, INTCONST>
<;, SEMICOLON>
<n2, ID>
<--, DECR>
<;, SEMICOLON>
<}, RBRACE>
<else, ELSE>
<{, LBRACE>
<n1, ID>
</=, DIVEQUAL>
<2, INTCONST>
<;, SEMICOLON>
<}, RBRACE>
<}, RBRACE>
<goto, GOTO>
<label, ID>
<;, SEMICOLON>
<return, RETURN>
<-, MINUS>
<1, INTCONST>
<;, SEMICOLON>
<label, ID>
<:, COLON>
<return, RETURN>
<(, LPAREN>
<n1, ID>
<*, TIMES>
<2, INTCONST>
<), RPAREN>
<;, SEMICOLON>
<}, RBRACE>
